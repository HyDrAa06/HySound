@using HySound.ViewModels.User
@using HySound.Models

@model UserViewModel

<div class="profile-container">
    <div class="profile-header">
        <div class="profile-banner">
            <div class="gradient-overlay"></div>
        </div>
        <div class="profile-main">
            <img src="@Model.ProfilePicture" class="profile-pic">
            <div class="profile-info">
                <span class="profile-label">Профил</span>
                <h1 class="profile-name">@Model.Name</h1>
                <p class="profile-bio">@(Model.Bio ?? "Няма налична биография")</p>
                <div class="profile-stats">
                    <span class="profile-email">@Model.Email</span>
                    <span class="stats-dot">•</span>
                    <span class="profile-followers" onclick="openFollowersModal()">
                        <strong>@Model.FollowersCount</strong> Последователи
                    </span>
                    <span class="stats-dot">•</span>
                    <span class="profile-following" onclick="openFollowingModal()">
                        <strong>@Model.FollowingCount</strong> Следвани
                    </span>
                </div>
            </div>
        </div>
        <div class="action-buttons">
            <button class="edit-profile-btn" onclick="openEditModal()">Редактирай профила</button>
        </div>
    </div>

    <div class="empty-state">
        <div class="empty-icon">🎵</div>
    </div>
</div>

<!-- Edit Profile Modal -->
<div id="editModal" class="modal">
    <div class="modal-content">
        <span class="close-btn" onclick="closeEditModal()">×</span>
        <h2>Редактирай профила</h2>
        <form asp-action="Update" asp-controller="User" method="post" enctype="multipart/form-data">
            <div class="profile-pic-upload">
                <div class="current-pic" style="background-image: url('@Model.ProfilePicture')">
                    <div class="upload-overlay">
                        <span class="upload-icon">📷</span>
                        <span>Избери снимка</span>
                    </div>
                </div>
                <input type="file" id="ImageFile" asp-for="ImageFile" class="hidden-upload" accept="image/*" />
            </div>

            <div class="input-group">
                <label for="username">Потребителско име</label>
                <input type="text" id="username" name="Name" value="@Model.Name" required>
                <div class="char-counter"><span id="userCharCount">0</span>/50</div>
            </div>

            <div class="input-group">
                <label for="bio">Биография</label>
                <textarea id="bio" name="Bio" placeholder="Добави биография към профила си">@Model.Bio</textarea>
                <div class="char-counter"><span id="bioCharCount">0</span>/150</div>
            </div>

            <div class="hidden">
                <input type="text" id="email" name="Email" value="@Model.Email" />
            </div>

            <div class="modal-actions">
                <button type="button" class="cancel-btn" onclick="closeEditModal()">Отказ</button>
                <button type="submit" class="save-btn">Запази</button>
            </div>
        </form>
    </div>
</div>

<!-- Followers/Following Modals -->
<div id="followersModal" class="modal">
    <div class="modal-content user-list-modal">
        <div class="modal-header">
            <h2>Последователи</h2>
            <span class="close-btn" onclick="closeFollowersModal()">×</span>
        </div>
        <ul class="modal-list">
            @foreach (var follower in Model.FollowersAsUsers)
            {
                <li class="user-list-item">
                    <img src="@follower.ProfilePicture" class="user-pfp">
                    <div class="user-info">
                        <span class="user-name">@follower.Username</span>
                        <span class="user-status">Последовател</span>
                    </div>
                </li>
            }
            @if (!Model.FollowersAsUsers.Any())
            {
                <div class="empty-list">
                    <p>Все още няма последователи</p>
                </div>
            }
        </ul>
    </div>
</div>

<div id="followingModal" class="modal">
    <div class="modal-content user-list-modal">
        <div class="modal-header">
            <h2>Следвани</h2>
            <span class="close-btn" onclick="closeFollowingModal()">×</span>
        </div>
        <ul class="modal-list">
            @foreach (var following in Model.FollowingAsUsers)
            {
                <li class="user-list-item">
                    <img src="@following.ProfilePicture" class="user-pfp">
                    <div class="user-info">
                        <span class="user-name">@following.Username</span>
                        <span class="user-status">Следван</span>
                    </div>
                </li>
            }
            @if (!Model.FollowingAsUsers.Any())
            {
                <div class="empty-list">
                    <p>Все още не следва никого</p>
                </div>
            }
        </ul>
    </div>
</div>



<style>
    :root {
        --spotify-green: #1DB954;
        --spotify-green-hover: #1ed760;
        --spotify-black: #121212;
        --spotify-dark-gray: #181818;
        --spotify-light-gray: #282828;
        --spotify-text-gray: #b3b3b3;
    }

    /* Profile Container */
    body {
        background-color: var(--spotify-black);
        color: white;
        font-family: 'Circular', 'Helvetica Neue', Arial, sans-serif;
        margin: 0;
        padding: 0;
    }

    .profile-container {
        max-width: 1100px;
        margin: 0 auto;
        color: white;
    }

    .profile-header {
        position: relative;
        padding-bottom: 24px;
    }

    .profile-banner {
        height: 240px;
        width: 100%;
        background-color: #535353;
        position: relative;
    }

    .gradient-overlay {
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        height: 70%;
        background: linear-gradient(transparent, rgba(0,0,0,0.7));
    }

    .profile-main {
        display: flex;
        align-items: flex-end;
        padding: 0 32px;
        margin-top: -130px;
        position: relative;
        z-index: 2;
    }

    .profile-pic {
        width: 192px;
        height: 192px;
        border-radius: 50%;
        object-fit: cover;
        margin-right: 24px;
        box-shadow: 0 4px 60px rgba(0,0,0,.5);
    }

    .profile-info {
        margin-bottom: 16px;
    }

    .profile-label {
        background-color: rgba(0,0,0,.6);
        border-radius: 4px;
        padding: 4px 8px;
        font-size: 12px;
        font-weight: 700;
        letter-spacing: 1px;
        text-transform: uppercase;
        display: inline-block;
        margin-bottom: 8px;
    }

    .profile-name {
        font-size: 72px;
        font-weight: 900;
        margin: 0 0 16px;
        letter-spacing: -0.04em;
        line-height: 1;
    }

    .profile-bio {
        font-size: 16px;
        color: #fff;
        margin: 6px 0 12px;
        max-width: 65%;
    }

    .profile-stats {
        display: flex;
        align-items: center;
        color: var(--spotify-text-gray);
        font-size: 14px;
    }

    .stats-dot {
        margin: 0 8px;
    }

    .profile-followers, .profile-following {
        cursor: pointer;
    }

    .action-buttons {
        position: absolute;
        top: 20px;
        right: 32px;
        z-index: 3;
    }

    .edit-profile-btn {
        background: transparent;
        color: white;
        border: 1px solid rgba(255,255,255,0.3);
        border-radius: 500px;
        padding: 8px 16px;
        font-size: 14px;
        font-weight: 700;
        letter-spacing: 0.1em;
        text-transform: uppercase;
        cursor: pointer;
        transition: all 0.3s;
    }

        .edit-profile-btn:hover {
            border-color: white;
            transform: scale(1.05);
        }

    /* Content Tabs */
    .content-tabs {
        display: flex;
        border-bottom: 1px solid rgba(255,255,255,0.1);
        margin: 16px 32px 0;
    }

    .tab {
        padding: 16px 16px;
        margin-right: 16px;
        font-size: 14px;
        font-weight: 700;
        color: var(--spotify-text-gray);
        cursor: pointer;
        position: relative;
        transition: color 0.3s;
    }

        .tab:hover {
            color: white;
        }

        .tab.active {
            color: white;
        }

            .tab.active:after {
                content: "";
                position: absolute;
                bottom: -1px;
                left: 0;
                width: 100%;
                height: 3px;
                background-color: var(--spotify-green);
            }

    /* Empty State */
    .empty-state {
        text-align: center;
        padding: 120px 0;
        color: var(--spotify-text-gray);
    }

    .empty-icon {
        font-size: 48px;
        margin-bottom: 16px;
    }

    .empty-state h2 {
        font-size: 24px;
        font-weight: 700;
        margin: 0 0 8px;
        color: white;
    }

    .empty-state p {
        font-size: 16px;
        margin: 0 0 24px;
    }

    .create-playlist-btn {
        background: white;
        color: black;
        border: none;
        border-radius: 500px;
        padding: 12px 32px;
        font-size: 14px;
        font-weight: 700;
        cursor: pointer;
        transition: transform 0.3s;
    }

        .create-playlist-btn:hover {
            transform: scale(1.05);
        }

    /* Modal Styles */
    .modal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.7);
        justify-content: center;
        align-items: center;
        z-index: 1000; /* Higher than player */
        overflow-y: auto; /* Allow scrolling if modal content exceeds viewport */
    }

    .modal-content {
        background: var(--spotify-light-gray);
        border-radius: 8px;
        width: 520px;
        max-width: 90%;
        color: white;
        position: relative;
        padding: 12px;
        padding-bottom: 70px; /* Added padding to account for player height */
        max-height: 80vh; /* Limit height to viewport with margin */
        overflow-y: auto; /* Allow scrolling within modal */
    }

    .user-list-modal {
        width: 480px;
        padding: 0;
    }

    .modal-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 24px;
        border-bottom: 1px solid rgba(255,255,255,0.1);
    }

        .modal-header h2 {
            margin: 0;
            font-size: 24px;
        }

    .close-btn {
        font-size: 28px;
        cursor: pointer;
        color: var(--spotify-text-gray);
        transition: color 0.3s;
    }

        .close-btn:hover {
            color: white;
        }

    /* Edit Modal */
    .modal-content h2 {
        font-size: 20px;
        margin: 12px 0;
        text-align: center;
    }

    .profile-pic-upload {
        width: 150px;
        height: 150px;
        margin: 0 auto 12px;
        position: relative;
    }

    .current-pic {
        width: 100%;
        height: 100%;
        border-radius: 50%;
        background-size: cover;
        background-position: center;
        cursor: pointer;
    }

    .upload-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        border-radius: 50%;
        background: rgba(0,0,0,0.7);
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transition: opacity 0.3s;
    }

    .current-pic:hover .upload-overlay {
        opacity: 1;
    }

    .upload-icon {
        font-size: 20px;
        margin-bottom: 6px;
    }

    .hidden-upload {
        position: absolute;
        width: 0.1px;
        height: 0.1px;
        opacity: 0;
        overflow: hidden;
        z-index: -1;
    }

    .input-group {
        padding: 0 16px;
        margin-bottom: 12px;
        text-align: left;
    }

        .input-group label {
            font-size: 14px;
            font-weight: 700;
            color: white;
            display: block;
            margin-bottom: 6px;
        }

        .input-group input, .input-group textarea {
            width: 100%;
            padding: 8px;
            background: rgba(255,255,255,0.1);
            border: none;
            border-radius: 4px;
            color: white;
            font-size: 14px;
            transition: background-color 0.3s;
            resize: none;
        }

        .input-group textarea {
            height: 60px;
        }

            .input-group input:focus, .input-group textarea:focus {
                background: rgba(255,255,255,0.2);
                outline: none;
            }

    .char-counter {
        text-align: right;
        font-size: 12px;
        color: var(--spotify-text-gray);
        margin-top: 2px;
    }

    .modal-actions {
        display: flex;
        justify-content: center;
        padding: 12px;
        border-top: 1px solid rgba(255,255,255,0.1);
        position: relative;
    }

    .cancel-btn, .save-btn {
        padding: 8px 20px;
        border-radius: 500px;
        font-size: 12px;
        font-weight: 700;
        text-transform: uppercase;
        cursor: pointer;
        transition: all 0.3s;
        margin: 0 6px;
    }

    .cancel-btn {
        background: transparent;
        color: white;
        border: 1px solid rgba(255,255,255,0.3);
    }

        .cancel-btn:hover {
            border-color: white;
        }

    .save-btn {
        background: var(--spotify-green);
        color: white;
        border: none;
    }

        .save-btn:hover {
            background: var(--spotify-green-hover);
            transform: scale(1.05);
        }

    /* Search in Modal */
    .modal-search {
        padding: 16px 24px;
        border-bottom: 1px solid rgba(255,255,255,0.1);
    }

    .search-container {
        position: relative;
    }

    .search-icon {
        position: absolute;
        left: 12px;
        top: 50%;
        transform: translateY(-50%);
        color: var(--spotify-text-gray);
    }

    .search-input {
        width: 100%;
        padding: 12px 12px 12px 40px;
        background: rgba(255,255,255,0.1);
        border: none;
        border-radius: 4px;
        color: white;
        font-size: 14px;
    }

        .search-input:focus {
            outline: none;
            background: rgba(255,255,255,0.2);
        }

    /* User List */
    .modal-list {
        list-style: none;
        padding: 0;
        margin: 0;
        max-height: 400px;
        overflow-y: auto;
    }

    .user-list-item {
        display: flex;
        align-items: center;
        padding: 12px 24px;
        transition: background-color 0.3s;
    }

        .user-list-item:hover {
            background-color: rgba(255,255,255,0.1);
        }

    .user-pfp {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        object-fit: cover;
    }

    .user-info {
        margin-left: 16px;
        flex: 1;
    }

    .user-name {
        display: block;
        font-size: 14px;
        font-weight: 700;
        color: white;
    }

    .user-status {
        display: block;
        font-size: 12px;
        color: var(--spotify-text-gray);
    }

    .follow-btn, .following-btn {
        border-radius: 500px;
        padding: 8px 16px;
        font-size: 12px;
        font-weight: 700;
        cursor: pointer;
        transition: all 0.3s;
    }

    .follow-btn {
        background: transparent;
        color: white;
        border: 1px solid rgba(255,255,255,0.3);
    }

        .follow-btn:hover {
            border-color: white;
            transform: scale(1.05);
        }

    .following-btn {
        background: var(--spotify-green);
        color: white;
        border: none;
    }

        .following-btn:hover {
            background: var(--spotify-green-hover);
            transform: scale(1.05);
        }

    .empty-list {
        text-align: center;
        padding: 48px 0;
        color: var(--spotify-text-gray);
    }

    .hidden {
        display: none;
    }

    /* Player Container */
    .player-container {
        display: flex;
        align-items: center;
        background-color: #181818;
        padding: 10px 20px;
        position: fixed;
        bottom: 0;
        left: 0;
        width: 100%;
        z-index: 50; /* Lower than modal */
        box-sizing: border-box;
    }

    /* Left Section */
    .player-left {
        display: flex;
        align-items: center;
        flex: 1;
    }

    .player-image {
        width: 50px;
        height: 50px;
        object-fit: cover;
        border-radius: 4px;
    }

    .player-info {
        margin-left: 10px;
        color: #fff;
    }

    .player-song-name {
        font-size: 14px;
        font-weight: bold;
    }

    .player-artist-name {
        font-size: 12px;
        color: #b3b3b3;
        display: block;
    }

    /* Center Section */
    .player-center {
        display: flex;
        flex-direction: column;
        align-items: center;
        flex: 2;
    }

    .player-btn-container {
        display: flex;
        justify-content: center;
        margin-top: 5px;
        margin-bottom: 8px;
    }

    .player-btn {
        background: none;
        border: none;
        color: #fff;
        font-size: 20px;
        margin: 0 10px;
        cursor: pointer;
        transition: transform 0.2s;
    }

        .player-btn:hover {
            transform: scale(1.1);
        }

    .player-icon {
        font-size: 20px;
    }

    /* Time Bar Container & Input */
    .player-timebar-container {
        width: 80%;
        position: relative;
        margin-top: -3px;
    }

    .player-timebar {
        -webkit-appearance: none;
        appearance: none;
        width: 100%;
        height: 4px;
        background: #1e1e1e;
        border-radius: 2px;
        outline: none;
        margin: 0;
        background: linear-gradient(to right, #1db954 0%, #1db954 0%, #1e1e1e 0%, #1e1e1e 100%);
    }

        .player-timebar::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background: #1db954;
            cursor: pointer;
            margin-top: -2px;
        }

        .player-timebar::-moz-range-thumb {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background: #1db954;
            cursor: pointer;
        }

    /* Right Section: Volume Control */
    .player-right {
        display: flex;
        align-items: center;
        flex: 1;
        justify-content: flex-end;
        margin-right: 20px;
    }

    .volume-icon {
        color: #fff;
        font-size: 16px;
        margin-right: 5px;
    }

    .player-sound-bar {
        -webkit-appearance: none;
        appearance: none;
        width: 100px;
        height: 4px;
        background: #1e1e1e;
        border-radius: 2px;
        outline: none;
        margin: 0;
        background: linear-gradient(to right, #1db954 0%, #1db954 100%, #1e1e1e 100%, #1e1e1e 100%);
    }

        .player-sound-bar::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background: #1db954;
            cursor: pointer;
            margin-top: -2px;
        }

        .player-sound-bar::-moz-range-thumb {
            width: 12px;
            height: 12px;
            border-radius: 50%;
            background: #1db954;
            cursor: pointer;
        }

    /* Responsive Adjustments */
    @@media (max-width: 768px) {
        .profile-main {
            flex-direction: column;
            align-items: center;
            text-align: center;
            padding: 0 16px;
        }

        .profile-pic {
            margin-right: 0;
            margin-bottom: 16px;
            width: 150px;
            height: 150px;
        }

        .profile-name {
            font-size: 48px;
        }

        .profile-bio {
            max-width: 100%;
        }

        .action-buttons {
            position: relative;
            top: auto;
            right: auto;
            margin-top: 16px;
            text-align: center;
        }

        .modal-content {
            width: 90%;
        }
    }
</style>
<script>
    // Modal open/close functions (moved to global scope)
    function openEditModal() {
        const modal = document.getElementById('editModal');
        modal.style.display = 'flex';
    }

    function closeEditModal() {
        const modal = document.getElementById('editModal');
        modal.style.display = 'none';
    }

    function openFollowersModal() {
        const modal = document.getElementById('followersModal');
        modal.style.display = 'flex';
    }

    function closeFollowersModal() {
        const modal = document.getElementById('followersModal');
        modal.style.display = 'none';
    }

    function openFollowingModal() {
        const modal = document.getElementById('followingModal');
        modal.style.display = 'flex';
    }

    function closeFollowingModal() {
        const modal = document.getElementById('followingModal');
        modal.style.display = 'none';
    }

    // Additional setup after DOM is loaded
    document.addEventListener('DOMContentLoaded', function () {
        const player = document.querySelector('.player-container');
        const body = document.body;

        // Add padding to the body for the player
        const playerHeight = player ? player.offsetHeight : 70; // Fallback to 70px if player not found
        body.style.paddingBottom = `${playerHeight}px`;

        // Function to update body padding on resize
        function updateBodyPadding() {
            const playerHeight = player ? player.offsetHeight : 70;
            body.style.paddingBottom = `${playerHeight}px`;
        }

        window.addEventListener('resize', updateBodyPadding);

        // Setup for image upload
        const currentPic = document.querySelector('.current-pic');
        const fileInput = document.getElementById('ImageFile');

        if (currentPic && fileInput) {
            currentPic.addEventListener('click', function () {
                fileInput.click();
            });

            fileInput.addEventListener('change', function () {
                if (this.files && this.files[0]) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        currentPic.style.backgroundImage = `url('${e.target.result}')`;
                    };
                    reader.readAsDataURL(this.files[0]);
                }
            });
        }

        // Character counter for bio and username
        const bioTextarea = document.getElementById('bio');
        const charCount = document.getElementById('bioCharCount');
        const usernameInput = document.getElementById('username');
        const userCharCount = document.getElementById('userCharCount');

        if (bioTextarea && charCount && usernameInput && userCharCount) {
            charCount.textContent = bioTextarea.value.length;
            userCharCount.textContent = usernameInput.value.length;

            usernameInput.addEventListener('input', function () {
                userCharCount.textContent = this.value.length;
                if (this.value.length > 50) {
                    this.value = this.value.substring(0, 50);
                    userCharCount.textContent = 50;
                }
            });

            bioTextarea.addEventListener('input', function () {
                charCount.textContent = this.value.length;
                if (this.value.length > 150) {
                    this.value = this.value.substring(0, 150);
                    charCount.textContent = 150;
                }
            });
        }
    });
</script>