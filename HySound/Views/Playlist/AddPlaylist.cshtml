@using HySound.ViewModels.Playlist
@model IEnumerable<PlaylistViewModel>

<div class="playlist-container">
    <div class="playlist-header">
        <h2>Моите плейлисти</h2>
        <a class="add-btn" asp-action="AddPlaylist" asp-controller="Playlist">
            <i class="fas fa-plus"></i> Добави плейлист
        </a>
    </div>

    <div class="playlist-grid">
        @foreach (var playlist in Model)
        {
            <div class="playlist-card">
                <div class="playlist-image-container">
                    <img src="@playlist.CoverImage" alt="Cover" class="playlist-cover">
                    <div class="play-button">
                        <i class="fas fa-play"></i>
                    </div>
                    <div class="playlist-buttons">
                        <button class="edit-btn" onclick="openModal('editPlaylistModal', '@playlist.Id', '@playlist.Title')">
                            <i class="fas fa-pencil-alt"></i>
                        </button>
                        <a asp-action="Delete" asp-controller="Playlist" asp-route-id="@playlist.Id" class="delete-btn">
                            <i class="fas fa-trash"></i>
                        </a>
                    </div>
                </div>
                <div class="playlist-info">
                    <div class="playlist-title">@playlist.Title</div>
                    <div class="playlist-details">
                        <span class="playlist-user">@playlist.UserName</span>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div class="overlay" id="overlay" onclick="closeModal()"></div>

<div class="modal" id="editPlaylistModal">
    <div class="modal-content">
        <h3>Редактирай плейлист</h3>
        <form id="editPlaylistForm">
            <input type="hidden" id="editPlaylistId" name="id">
            <div class="form-group">
                <label for="editPlaylistTitle">Заглавие</label>
                <input type="text" id="editPlaylistTitle" name="title" placeholder="Заглавие на плейлиста">
            </div>
            <div class="form-group">
                <label for="editPlaylistCover">Обложка</label>
                <input type="file" id="editPlaylistCover" name="picture" class="file-input">
                <div class="file-label">Избери файл</div>
            </div>
            <div class="modal-btns">
                <button type="button" class="cancel-btn" onclick="closeModal()">Отказ</button>
                <button type="button" class="save-btn" onclick="updatePlaylist(event)">Запази</button>
            </div>
        </form>
    </div>
</div>

<script>
    // File input styling
    document.addEventListener('DOMContentLoaded', function() {
        const fileInput = document.getElementById('editPlaylistCover');
        const fileLabel = document.querySelector('.file-label');
        
        fileInput.addEventListener('change', function() {
            if (fileInput.files.length > 0) {
                fileLabel.textContent = fileInput.files[0].name;
                fileLabel.classList.add('file-selected');
            } else {
                fileLabel.textContent = 'Избери файл';
                fileLabel.classList.remove('file-selected');
            }
        });
    });

    function openModal(modalId, id = null, title = null) {
        document.getElementById('overlay').style.display = 'block';
        let modal = document.getElementById(modalId);
        modal.style.display = 'block';

        if (modalId === 'editPlaylistModal') {
            document.getElementById('editPlaylistId').value = id;
            document.getElementById('editPlaylistTitle').value = title;
            document.getElementById('editPlaylistCover').value = ''; // Reset file input
            document.querySelector('.file-label').textContent = 'Избери файл';
            document.querySelector('.file-label').classList.remove('file-selected');
        }
    }

    function closeModal() {
        document.getElementById('overlay').style.display = 'none';
        document.querySelectorAll('.modal').forEach(modal => {
            modal.style.display = 'none';
        });
    }

    function updatePlaylist(event) {
        event.preventDefault(); // Prevent any default form submission

        const id = document.getElementById('editPlaylistId').value;
        const title = document.getElementById('editPlaylistTitle').value;
        const fileInput = document.getElementById('editPlaylistCover');
        const formData = new FormData();

        formData.append('id', id);
        formData.append('title', title);
        if (fileInput.files.length > 0) {
            formData.append('picture', fileInput.files[0]);
        }

        fetch('/Playlist/Update', {
            method: 'POST',
            body: formData,
            headers: {
                'X-Requested-With': 'XMLHttpRequest'
            }
        })
            .then(response => {
                if (!response.ok) {
                    return response.text().then(text => {
                        throw new Error(`HTTP ${response.status}: ${text || 'Update failed'}`);
                    });
                }
                return response.text();
            })
            .then(data => {
                location.reload();
            })
            .catch(error => {
                console.error('Update Error:', error);
                alert('Грешка при редактирането: ' + error.message);
            })
            .finally(() => closeModal());
    }
</script>

<style>
    :root {
        --spotify-black: #121212;
        --spotify-dark-gray: #181818;
        --spotify-medium-gray: #282828;
        --spotify-light-gray: #b3b3b3;
        --spotify-green: #1db954;
        --spotify-green-hover: #1ed760;
        --spotify-red: #f44336;
    }

    body {
        background-color: var(--spotify-black);
        color: white;
        font-family: 'Gotham', 'Helvetica Neue', Helvetica, Arial, sans-serif;
        margin: 0;
        padding: 0;
    }

    .playlist-container {
        max-width: 1400px;
        margin: 0 auto;
        padding: 24px;
    }

    .playlist-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 32px;
    }

    .playlist-header h2 {
        font-size: 28px;
        font-weight: 700;
        margin: 0;
    }

    .add-btn {
        background: rgba(255, 255, 255, 0.1);
        color: white;
        padding: 10px 20px;
        border: none;
        border-radius: 500px;
        cursor: pointer;
        font-size: 14px;
        font-weight: 700;
        text-decoration: none;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 8px;
    }

    .add-btn:hover {
        background: rgba(255, 255, 255, 0.2);
        transform: scale(1.04);
    }

    .playlist-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
        gap: 24px;
    }

    .playlist-card {
        background: var(--spotify-dark-gray);
        padding: 16px;
        border-radius: 6px;
        transition: background 0.3s ease;
        cursor: pointer;
        position: relative;
    }

    .playlist-card:hover {
        background: var(--spotify-medium-gray);
    }

    .playlist-image-container {
        position: relative;
        width: 100%;
        padding-bottom: 100%; /* Makes it square */
        margin-bottom: 16px;
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.5);
    }

    .playlist-cover {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 4px;
    }

    .play-button {
        position: absolute;
        bottom: 8px;
        right: 8px;
        background: var(--spotify-green);
        border-radius: 50%;
        width: 48px;
        height: 48px;
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0;
        transform: translateY(8px);
        transition: all 0.3s ease;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
    }

    .playlist-card:hover .play-button {
        opacity: 1;
        transform: translateY(0);
    }

    .play-button:hover {
        background: var(--spotify-green-hover);
        transform: scale(1.06) translateY(0);
    }

    .play-button i {
        font-size: 20px;
        color: white;
    }

    .playlist-info {
        margin-top: 8px;
    }

    .playlist-title {
        font-weight: 700;
        font-size: 16px;
        margin-bottom: 4px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .playlist-details {
        font-size: 14px;
        color: var(--spotify-light-gray);
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .playlist-buttons {
        position: absolute;
        top: 8px;
        right: 8px;
        display: flex;
        gap: 8px;
        opacity: 0;
        transition: opacity 0.3s ease;
        z-index: 10;
    }

    .playlist-card:hover .playlist-buttons {
        opacity: 1;
    }

    .playlist-buttons button,
    .playlist-buttons a {
        background: rgba(0, 0, 0, 0.7);
        border: none;
        border-radius: 50%;
        width: 32px;
        height: 32px;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: transform 0.2s ease, background 0.3s ease;
    }

    .playlist-buttons .edit-btn {
        color: white;
    }

    .playlist-buttons .delete-btn {
        color: white;
    }

    .playlist-buttons button:hover,
    .playlist-buttons a:hover {
        transform: scale(1.1);
        background: rgba(0, 0, 0, 0.9);
    }

    /* Modal Styles */
    .overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.7);
        z-index: 999;
        backdrop-filter: blur(5px);
    }

    .modal {
        display: none;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 1000;
        width: 400px;
        border-radius: 8px;
        overflow: hidden;
    }

    .modal-content {
        background: var(--spotify-medium-gray);
        padding: 24px;
    }

    .modal h3 {
        margin-top: 0;
        margin-bottom: 24px;
        font-size: 20px;
        font-weight: 700;
        text-align: center;
    }

    .form-group {
        margin-bottom: 16px;
    }

    .form-group label {
        display: block;
        margin-bottom: 8px;
        font-size: 14px;
        color: var(--spotify-light-gray);
    }

    .modal input[type="text"] {
        width: 100%;
        padding: 12px;
        border: none;
        border-radius: 4px;
        background: rgba(255, 255, 255, 0.1);
        color: white;
        font-size: 16px;
        box-sizing: border-box;
    }

    .modal input[type="text"]:focus {
        outline: none;
        background: rgba(255, 255, 255, 0.2);
    }

    .modal input[type="file"] {
        display: none;
    }

    .file-label {
        display: block;
        padding: 12px;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 4px;
        text-align: center;
        cursor: pointer;
        transition: background 0.3s ease;
    }

    .file-label:hover {
        background: rgba(255, 255, 255, 0.2);
    }

    .file-selected {
        background: rgba(29, 185, 84, 0.3);
    }

    .modal-btns {
        display: flex;
        justify-content: space-between;
        margin-top: 24px;
    }

    .modal-btns button {
        padding: 12px 24px;
        border: none;
        border-radius: 500px;
        font-weight: 700;
        cursor: pointer;
        transition: background 0.3s ease, transform 0.2s ease;
        width: 48%;
    }

    .save-btn {
        background: var(--spotify-green);
        color: white;
    }

    .save-btn:hover {
        background: var(--spotify-green-hover);
        transform: scale(1.03);
    }

    .cancel-btn {
        background: transparent;
        color: white;
        border: 1px solid rgba(255, 255, 255, 0.3);
    }

    .cancel-btn:hover {
        border-color: rgba(255, 255, 255, 0.6);
        transform: scale(1.03);
    }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .playlist-grid {
            grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
            gap: 16px;
        }

        .playlist-header h2 {
            font-size: 22px;
        }

        .modal {
            width: 90%;
            max-width: 400px;
        }
    }

    @@media (max-width: 480px) {
        .playlist-grid {
            grid-template-columns: repeat(2, 1fr);
            gap: 12px;
        }

        .playlist-title {
            font-size: 14px;
        }

        .playlist-details {
            font-size: 12px;
        }
    }
</style>