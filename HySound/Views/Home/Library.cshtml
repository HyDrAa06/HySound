@using HySound.ViewModels.Main
@model LibraryViewModel

<div class="library-container">
    <aside class="library-sidebar">
        <ul class="library-nav">
            <li id="favourites-option" class="active"><i class="fas fa-heart" aria-label="Любими"></i></li>
            <li id="playlists-option"><i class="fas fa-music" aria-label="Плейлисти"></i></li>
            <li id="albums-option"><i class="fas fa-compact-disc" aria-label="Албуми"></i></li>
        </ul>
    </aside>
    <section class="library-content">
        <h1 id="library-title" class="library-title">Моята библиотека</h1>
        <div id="favourites-content" class="library-grid">
            @if (Model.Tracks != null)
            {
                @foreach (var track in Model.Tracks)
                {
                    @if (track.IsYoutube == true)
                    {
                        <div class="library-track-card">
                            <iframe class="track-iframe"
                                    src="https://www.youtube.com/embed/@track.AudioUrl?autoplay=0&controls=1&modestbranding=1&showinfo=0&rel=0"
                                    frameborder="0" allow="autoplay">
                            </iframe>
                            <div class="dropdown">
                                <button type="button" class="btn btn-options" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="fas fa-ellipsis-h"></i>
                                </button>
                                <ul class="dropdown-menu dropdown-menu-dark dropdown-menu-end">
                                    <li><a class="dropdown-item" asp-controller="Track" asp-action="TrackDetails" asp-route-id="@track.TrackId">Детайли</a></li>
                                </ul>
                            </div>

                            <div class="library-track-info">
                                <h3 class="library-track-title">@track.Title</h3>
                                <p class="library-track-artist">@track.UserName</p>
                                <div class="library-track-actions">
                                    <div class="play-dislike-container">
                                        <a asp-controller="Like" asp-action="Dislike" asp-route-id="@track.TrackId" class="track-btn unlike-btn" aria-label="Премахни от харесвани">
                                            <i class="fas fa-heart-broken"></i>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="library-track-card">
                            <div class="dropdown">
                                <button type="button" class="btn btn-options" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="fas fa-ellipsis-h"></i>
                                </button>
                                <ul class="dropdown-menu dropdown-menu-dark dropdown-menu-end">
                                    <li>
                                        <a class="dropdown-item" href="#" onclick="openAddToPlaylistModal(@track.TrackId)">
                                            Добави към плейлист
                                        </a>
                                    </li>
                                    <li><a class="dropdown-item" asp-controller="Track" asp-action="TrackDetails" asp-route-id="@track.TrackId">Детайли</a></li>
                                </ul>
                            </div>
                            <img src="@track.ImageLink" alt="Изображение на песен" class="library-track-img">
                            <div class="library-track-info">
                                <h3 class="library-track-title">@track.Title</h3>
                                <p class="library-track-artist">@track.UserName</p>
                                <div class="library-track-actions">
                                    <div class="play-dislike-container">
                                        <button class="play-track-btn"
                                                data-src="@track.AudioUrl"
                                                data-title="@track.Title"
                                                data-artist="@track.UserName"
                                                data-image="@track.ImageLink">
                                            <i class="fas fa-play"></i>
                                        </button>

                                        <a asp-controller="Like" asp-action="Dislike" asp-route-id="@track.TrackId" class="track-btn unlike-btn" aria-label="Премахни от харесвани">
                                            <i class="fas fa-heart-broken"></i>
                                        </a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            }
        </div>
        <div id="playlists-content" class="library-grid" style="display: none;">
            @if (Model.Playlists != null)
            {
                @foreach (var playlist in Model.Playlists)
                {
                    <div class="library-track-card" data-type="playlist" data-playlistid="@playlist.Id">
                        <img src="@playlist.CoverImage" alt="Корица на плейлист" class="library-track-img">
                        <div class="library-track-info">
                            <h3 class="library-track-title">@playlist.Title</h3>
                            <p class="library-track-artist">@playlist.UserName</p>
                            <div class="library-track-actions">
                                <button class="track-btn playlist-play-btn" data-playlistid="@playlist.Id" aria-label="Пусни плейлист">
                                    <i class="fas fa-play"></i>
                                </button>
                                <a asp-action="DislikePlaylist" asp-controller="Like" asp-route-id="@playlist.Id" class="track-btn unlike-btn" aria-label="Премахни от харесвани плейлисти">
                                    <i class="fas fa-heart-broken"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                }

                <a asp-action="AddPlaylist" asp-controller="Playlist">
                    <div class="library-track-card add-playlist-card">
                        <div class="add-playlist-content">
                            <div class="add-playlist-icon">
                                <i class="fas fa-plus-circle"></i>
                            </div>
                            <h3 class="add-playlist-text">Създай нов плейлист</h3>
                        </div>
                    </div>
                </a>
            }
        </div>
        <div id="albums-content" class="library-grid" style="display: none;">
            @if (Model.Albums != null)
            {
                @foreach (var album in Model.Albums)
                {
                    <div class="album-card" data-type="album" data-albumid="@album.Id">
                        <img src="@album.CoverImage" alt="Корица на албум" class="album-image">
                        <div class="album-info">
                            <h3 class="album-title">@album.Title</h3>
                            <p class="album-artist">@album.UserName</p>
                            <div class="album-actions">
                                <button class="album-play-btn" data-albumid="@album.Id">
                                    <i class="fas fa-play"></i>
                                </button>
                                <a asp-controller="Like" asp-action="DislikeAlbum" asp-route-id="@album.Id" class="album-unlike-btn" aria-label="Премахни от харесвани албуми">
                                    <i class="fas fa-heart-broken"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                }
            }
        </div>

        <div id="selected-album-tracks" class="tracklist-grid" style="display: none;">
            
        </div>

        
        <div id="selected-playlist-tracks" class="tracklist-grid" style="display: none;">
            
        </div>
    </section>
</div>


<div class="modal fade" id="addToPlaylistModal" tabindex="-1" aria-labelledby="addToPlaylistModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content spotify-modal">
            <div class="modal-header">
                <h5 class="modal-title" id="addToPlaylistModalLabel">Добави към плейлист</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Затвори"></button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="selected-track-id" name="trackId" value="">
                <form id="add-to-playlist-form">
                    <div class="playlist-checkboxes">
                        @if (Model.Playlists != null && Model.Playlists.Any())
                        {
                            @foreach (var playlist in Model.Playlists)
                            {
                                <div class="playlist-selection-item">
                                    <input class="playlist-checkbox" type="checkbox" value="@playlist.Id" id="playlist-@playlist.Id">
                                    <label class="playlist-selection-label" for="playlist-@playlist.Id">
                                        <img src="@playlist.CoverImage" alt="@playlist.Title Корица" class="playlist-cover">
                                        <span class="playlist-title">@playlist.Title</span>
                                    </label>
                                </div>
                            }
                        }
                        else
                        {
                            <p class="no-playlists">Няма налични плейлисти.</p>
                        }
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary spotify-btn-secondary" data-bs-dismiss="modal">Отказ</button>
                <button type="button" class="btn btn-primary spotify-btn-primary" id="add-to-playlist-btn">Добави</button>
            </div>
        </div>
    </div>
</div>

<script>
    function openAddToPlaylistModal(trackId) {
        const hiddenInput = document.getElementById('selected-track-id');
        if (hiddenInput) {
            hiddenInput.value = trackId;
        }
        $('#addToPlaylistModal').modal('show');
        const errorDiv = document.querySelector('.playlist-error');
        if (errorDiv) errorDiv.remove();
    }

    document.addEventListener("DOMContentLoaded", function () {
        document.getElementById("add-to-playlist-btn").addEventListener("click", function () {
            const hiddenInput = document.getElementById('selected-track-id');
            const trackId = hiddenInput ? parseInt(hiddenInput.value) : null;
            const selectedPlaylists = [];
            const modalBody = document.querySelector('#addToPlaylistModal .modal-body');

            const existingError = document.querySelector('.playlist-error');
            if (existingError) existingError.remove();

            if (!trackId || isNaN(trackId) || trackId <= 0) {
                const errorDiv = document.createElement('div');
                errorDiv.className = 'playlist-error text-danger';
                errorDiv.textContent = 'Грешка: Няма избрана песен. Моля, опитайте отново.';
                modalBody.insertBefore(errorDiv, modalBody.firstChild);
                return;
            }

            document.querySelectorAll('.playlist-checkboxes input:checked').forEach(checkbox => {
                const playlistId = parseInt(checkbox.value);
                if (!isNaN(playlistId) && playlistId > 0) {
                    selectedPlaylists.push(playlistId);
                }
            });

            if (selectedPlaylists.length === 0) {
                const errorDiv = document.createElement('div');
                errorDiv.className = 'playlist-error text-danger';
                errorDiv.textContent = 'Моля, изберете поне един плейлист.';
                modalBody.insertBefore(errorDiv, modalBody.firstChild);
                return;
            }

            fetch('/Track/AddToPlaylists', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    trackId: trackId,
                    playlistIds: selectedPlaylists
                })
            })
                .then(response => {
                    if (!response.ok) throw new Error('Network response was not ok');
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        alert("Песента е добавена към избраните плейлисти!");
                        $('#addToPlaylistModal').modal('hide');
                    } else {
                        const errorDiv = document.createElement('div');
                        errorDiv.className = 'playlist-error text-danger';
                        errorDiv.textContent = data.message || "Грешка при добавянето на песента към плейлистите.";
                        modalBody.insertBefore(errorDiv, modalBody.firstChild);
                    }
                })
                .catch(error => {
                    const errorDiv = document.createElement('div');
                    errorDiv.className = 'playlist-error text-danger';
                    errorDiv.textContent = 'Възникна грешка при добавянето на песента.';
                    modalBody.insertBefore(errorDiv, modalBody.firstChild);
                });
        });
    });
</script>

<style>
    .tracklist-grid {
        display: grid;
        gap: 8px;
        padding: 20px 0;
    }

    .tracklist-row {
        display: grid;
        grid-template-columns: 50px 2fr 1fr 50px;
        align-items: center;
        background-color: var(--bg-card);
        border-radius: 4px;
        padding: 8px;
        transition: background-color var(--transition-speed) ease;
    }

        .tracklist-row:hover {
            background-color: var(--bg-card-hover);
        }

    .tracklist-cell.image img {
        width: 40px;
        height: 40px;
        object-fit: cover;
        border-radius: 4px;
    }

    .tracklist-cell.title {
        font-weight: 500;
        color: var(--text-primary);
    }

    .tracklist-cell.artist {
        color: var(--text-secondary);
    }

    .tracklist-cell.actions {
        justify-self: end;
    }

    .tracklist-play-btn {
        background-color: var(--primary-color);
        border: none;
        width: 30px;
        height: 30px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        cursor: pointer;
        transition: transform var(--transition-speed) ease;
    }

        .tracklist-play-btn:hover {
            transform: scale(1.1);
            background-color: var(--primary-hover);
        }

    .back-button {
        margin-top: 20px;
        padding: 8px 16px;
        background-color: var(--primary-color);
        border: none;
        border-radius: 20px;
        color: white;
        cursor: pointer;
        transition: background-color var(--transition-speed) ease;
    }

        .back-button:hover {
            background-color: var(--primary-hover);
        }

    .no-tracks {
        color: var(--text-secondary);
        text-align: center;
        padding: 20px;
    }
    /* Now playing visual indicator - animation continued */
    /* Base improvements */
    :root {
        --primary-color: #1db954;
        --primary-hover: #1ed760;
        --bg-dark: #121212;
        --bg-card: #181818;
        --bg-card-hover: #282828;
        --text-primary: #ffffff;
        --text-secondary: #b3b3b3;
        --transition-speed: 0.3s;
    }

    body {
        background-color: var(--bg-dark);
        color: var(--text-primary);
        font-family: 'Circular', 'Helvetica Neue', Helvetica, Arial, sans-serif;
    }

    /* Library container with improved layout */
    .library-container {
        display: flex;
        min-height: calc(100vh - 80px);
        transition: all var(--transition-speed) ease;
        background: linear-gradient(to bottom, #303030, var(--bg-dark));
    }

    /* Enhanced sidebar with hover effects */
    .library-sidebar {
        width: 80px;
        background-color: #000000;
        transition: width var(--transition-speed) ease;
        box-shadow: 2px 0 10px rgba(0, 0, 0, 0.3);
        position: sticky;
        top: 0;
        height: 100vh;
        z-index: 10;
    }

        .library-sidebar:hover {
            width: 180px;
        }

    .library-nav {
        padding: 0;
        margin-top: 24px;
        list-style: none;
    }

        .library-nav li {
            padding: 16px;
            margin: 8px 0;
            border-radius: 0 50px 50px 0;
            cursor: pointer;
            transition: all var(--transition-speed) ease;
            display: flex;
            align-items: center;
            position: relative;
            overflow: hidden;
        }

            .library-nav li i {
                font-size: 20px;
                min-width: 40px;
                text-align: center;
                color: var(--text-secondary);
                transition: all var(--transition-speed) ease;
            }

            /* Add text labels to sidebar on hover */
            .library-nav li::after {
                content: attr(data-label);
                position: absolute;
                left: 70px;
                color: var(--text-secondary);
                opacity: 0;
                transition: opacity var(--transition-speed) ease;
                font-weight: 500;
            }

    .library-sidebar:hover .library-nav li::after {
        opacity: 1;
    }

    .library-nav li:hover {
        background-color: #333;
    }

        .library-nav li:hover i,
        .library-nav li.active i {
            color: var(--primary-color);
            transform: scale(1.1);
        }

    .library-nav li.active {
        background: linear-gradient(90deg, rgba(29, 185, 84, 0.2) 0%, transparent 100%);
        border-left: 3px solid var(--primary-color);
    }

    /* Content area improvements */
    .library-content {
        flex-grow: 1;
        padding: 30px 40px;
        transition: all var(--transition-speed) ease;
    }

    .library-title {
        font-size: 32px;
        font-weight: 800;
        margin-bottom: 24px;
        color: var(--text-primary);
        letter-spacing: -0.5px;
    }

        .library-title::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            width: 50px;
            height: 3px;
            background: var(--primary-color);
            transition: width var(--transition-speed) ease;
        }

        .library-title:hover::after {
            width: 100px;
        }

    /* Enhanced grid layout */
    .library-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));
        gap: 24px;
        padding: 10px 0;
    }

    /* Card animations and styling */
    .album-card, .library-track-card {
        background-color: var(--bg-card);
        border-radius: 8px;
        overflow: hidden;
        position: relative;
        transition: all 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
        height: 100%;
        display: flex;
        flex-direction: column;
    }

        .album-card:hover, .library-track-card:hover {
            transform: translateY(-5px);
            background-color: var(--bg-card-hover);
            box-shadow: 0 12px 20px rgba(0, 0, 0, 0.2);
        }

    /* Make album images consistent */
    .album-image, .library-track-img {
        width: 100%;
        aspect-ratio: 1/1;
        object-fit: cover;
        transition: all 0.2s ease;
    }

    /* Enhanced info section with better spacing */
    .album-info, .library-track-info {
        padding: 14px;
        position: relative;
        display: flex;
        flex-direction: column;
        flex-grow: 1;
    }

    /* Improve title and artist typography */
    .album-title, .library-track-title {
        font-size: 14px;
        font-weight: 700;
        margin: 0 0 6px 0;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        color: var(--text-primary);
    }

    .album-artist, .library-track-artist {
        font-size: 12px;
        color: var(--text-secondary);
        margin: 0;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    /* Enhanced action buttons */
    .album-actions, .library-track-actions {
        margin-top: 10px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: auto;
    }

    /* Enhanced play button with smoother transition */
    .album-play-btn, .play-track-btn {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background-color: var(--primary-color);
        border: none;
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        box-shadow: 0 4px 8px rgba(29, 185, 84, 0.3);
        opacity: 0;
        position: absolute;
        right: 16px;
        bottom: 16px;
        transform: scale(0.8);
        transition: all 0.2s ease-out;
    }

    /* More prominent play button on hover */
    .album-card:hover .album-play-btn,
    .library-track-card:hover .play-track-btn {
        opacity: 1;
        transform: scale(1);
    }

    .play-track-btn:hover, .album-play-btn:hover {
        transform: scale(1.1);
        background-color: var(--primary-hover);
    }

    .unlike-btn {
        background: none;
        border: none;
        cursor: pointer;
        position: absolute;
        top: 12px;
        left: 12px;
        width: 30px;
        height: 30px;
        background-color: rgba(0, 0, 0, 0.5);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.2s ease;
    }

        .unlike-btn i {
            font-size: 14px;
            color: #e91e63;
        }

        .unlike-btn:hover i {
            transform: scale(1.2);
            color: #ff4081;
        }

    /* Dropdown button styling */
    .btn-options {
        position: absolute;
        top: 10px;
        right: 10px;
        z-index: 5;
        background-color: rgba(0, 0, 0, 0.5);
        color: white;
        border: none;
        width: 32px;
        height: 32px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        opacity: 0;
        transition: all var(--transition-speed) ease;
    }

    .library-track-card:hover .btn-options,
    .album-card:hover .btn-options {
        opacity: 1;
    }

    .btn-options:hover {
        background-color: rgba(0, 0, 0, 0.7);
        color: var(--primary-color);
    }

    /* Modal improvements */
    .spotify-modal {
        background-color: #212121;
        border-radius: 12px;
        overflow: hidden;
        animation: modalFadeIn 0.3s ease-out;
        color: var(--text-primary);
        border: 1px solid #333;
        box-shadow: 0 8px 24px rgba(0, 0, 0, 0.4);
    }

        .spotify-modal .modal-header {
            background-color: rgba(0, 0, 0, 0.2);
            border-bottom: 1px solid #333;
            padding: 16px 20px;
        }

        .spotify-modal .modal-title {
            font-size: 20px;
            font-weight: 700;
            letter-spacing: -0.5px;
        }

        .spotify-modal .modal-body {
            padding: 20px;
        }

        .spotify-modal .modal-footer {
            border-top: 1px solid #333;
            padding: 16px 20px;
            display: flex;
            justify-content: flex-end;
            gap: 12px;
        }

        .spotify-modal .btn-close-white {
            background-color: transparent;
            color: var(--text-secondary);
            opacity: 0.7;
            transition: opacity var(--transition-speed) ease;
        }

            .spotify-modal .btn-close-white:hover {
                opacity: 1;
                color: var(--text-primary);
            }

    .spotify-playlist-item {
        border-radius: 8px;
        margin: 8px 0;
        padding: 10px;
        transition: all var(--transition-speed) ease;
        cursor: pointer;
    }

        .spotify-playlist-item:hover {
            background-color: #333;
            transform: translateX(5px);
        }

    /* Playlist item content enhancements */
    .playlist-item-content {
        display: flex;
        align-items: center;
        gap: 12px;
    }

    /* Better playlist cover image */
    .playlist-cover {
        width: 40px;
        height: 40px;
        border-radius: 4px;
        object-fit: cover;
        transition: all var(--transition-speed) ease;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }

    .spotify-playlist-item:hover .playlist-cover {
        transform: scale(1.05);
    }

    .playlist-title {
        font-size: 14px;
        font-weight: 500;
        color: var(--text-primary);
    }

    /* Spotify buttons */
    .spotify-btn-primary {
        background-color: var(--primary-color);
        color: white;
        border: none;
        padding: 10px 24px;
        border-radius: 50px;
        font-weight: 600;
        letter-spacing: 0.5px;
        transition: all var(--transition-speed) ease;
        min-width: 100px;
    }

        .spotify-btn-primary:hover {
            background-color: var(--primary-hover);
            transform: scale(1.05);
        }

    .spotify-btn-secondary {
        background-color: transparent;
        color: var(--text-primary);
        border: 1px solid #555;
        padding: 10px 24px;
        border-radius: 50px;
        font-weight: 600;
        letter-spacing: 0.5px;
        transition: all var(--transition-speed) ease;
    }

        .spotify-btn-secondary:hover {
            background-color: rgba(255, 255, 255, 0.1);
            border-color: #777;
        }

    /* Checkbox styling */
    .form-check-input {
        appearance: none;
        width: 20px;
        height: 20px;
        border: 2px solid #535353;
        border-radius: 4px;
        margin-right: 16px;
        position: relative;
        cursor: pointer;
        transition: all var(--transition-speed) ease;
    }

        .form-check-input:checked {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
        }

            .form-check-input:checked::after {
                content: '✓';
                position: absolute;
                color: white;
                font-size: 14px;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
            }

    .form-check-label {
        display: flex;
        align-items: center;
        cursor: pointer;
        width: 100%;
    }

    /* No playlists message */
    .no-playlists {
        text-align: center;
        color: var(--text-secondary);
        padding: 24px 0;
        font-style: italic;
    }

    /* Playlist checkboxes container */
    .playlist-checkboxes {
        max-height: 300px;
        overflow-y: auto;
        padding-right: 8px;
    }

        /* Scrollbar styling for playlist container */
        .playlist-checkboxes::-webkit-scrollbar {
            width: 8px;
        }

        .playlist-checkboxes::-webkit-scrollbar-track {
            background: #1a1a1a;
            border-radius: 4px;
        }

        .playlist-checkboxes::-webkit-scrollbar-thumb {
            background: #535353;
            border-radius: 4px;
        }

            .playlist-checkboxes::-webkit-scrollbar-thumb:hover {
                background: #6a6a6a;
            }

    @@keyframes modalFadeIn {
        from {
            opacity: 0;
            transform: translateY(20px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    /* Redesigned playlist modal */
    .playlist-checkboxes {
        max-height: 300px;
        overflow-y: auto;
        padding: 4px;
        display: flex;
        flex-direction: column;
        gap: 8px;
    }

    .playlist-selection-item {
        display: flex;
        align-items: center;
        background-color: rgba(255, 255, 255, 0.05);
        border-radius: 8px;
        padding: 8px 12px;
        transition: all 0.2s ease;
        position: relative;
    }

        .playlist-selection-item:hover {
            background-color: rgba(255, 255, 255, 0.1);
            transform: translateX(4px);
        }

    .playlist-checkbox {
        appearance: none;
        -webkit-appearance: none;
        width: 22px;
        height: 22px;
        border: 2px solid #535353;
        border-radius: 4px;
        margin-right: 12px;
        position: relative;
        cursor: pointer;
        transition: all 0.2s ease;
        flex-shrink: 0;
    }

        .playlist-checkbox:checked {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
        }

            .playlist-checkbox:checked::after {
                content: '✓';
                position: absolute;
                color: white;
                font-size: 14px;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
            }

    .playlist-selection-label {
        display: flex;
        align-items: center;
        cursor: pointer;
        width: 100%;
        margin: 0;
    }

    .playlist-cover {
        width: 40px;
        height: 40px;
        border-radius: 6px;
        object-fit: cover;
        margin-right: 12px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
        flex-shrink: 0;
    }

    .playlist-title {
        font-size: 14px;
        font-weight: 500;
        color: var(--text-primary);
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        flex-grow: 1;
    }

    /* Mobile responsiveness for the modal */
    @@media (max-width: 576px) {
        .playlist-selection-item {
            padding: 6px 8px;
        }

        .playlist-cover {
            width: 32px;
            height: 32px;
            margin-right: 8px;
        }

        .playlist-checkbox {
            width: 18px;
            height: 18px;
            margin-right: 8px;
        }

        .playlist-title {
            font-size: 12px;
        }
    }

    /* Content section animations */
    #favourites-content, #playlists-content, #albums-content, #tracklist-content {
        animation: fadeIn 0.5s ease-out;
    }

    @@keyframes fadeIn {
        from {
            opacity: 0;
            transform: translateY(10px);
        }

        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    /* Now playing visual indicator */
    .now-playing {
        position: relative;
    }

        .now-playing::before {
            content: '';
            position: absolute;
            left: -10px;
            top: 50%;
            width: 4px;
            height: 70%;
            background-color: var(--primary-color);
            transform: translateY(-50%);
            border-radius: 2px;
            animation: pulse
        }

    /* Now playing visual indicator - animation continued */
    @@keyframes pulse {
        0% {
            opacity: 0.6;
            height: 70%;
        }

        50% {
            opacity: 1;
            height: 85%;
        }

        100% {
            opacity: 0.6;
            height: 70%;
        }
    }

    /* Empty state styling */
    .empty-state {
        text-align: center;
        padding: 40px 20px;
        color: var(--text-secondary);
    }

        .empty-state i {
            font-size: 48px;
            margin-bottom: 16px;
            color: #555;
        }

        .empty-state h3 {
            margin-bottom: 16px;
            font-weight: 600;
        }

    /* Loading animations */
    .loading-skeleton {
        background: linear-gradient(90deg, #333 25%, #3a3a3a 50%, #333 75%);
        background-size: 200% 100%;
        animation: loading 1.5s infinite;
        border-radius: 4px;
    }

    @@keyframes loading {
        0% {
            background-position: 200% 0;
        }

        100% {
            background-position: -200% 0;
        }
    }

    /* Media queries for responsiveness */
    @@media (max-width: 768px) {
        .library-container {
            flex-direction: column;
        }

        .library-sidebar {
            width: 100%;
            height: auto;
            position: sticky;
            top: 0;
        }

        .library-nav {
            display: flex;
            justify-content: space-around;
            margin: 0;
        }

            .library-nav li {
                margin: 0;
                border-radius: 0;
            }

                .library-nav li::after {
                    display: none;
                }

        .library-content {
            padding: 20px;
        }

        .library-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
            gap: 16px; /* Reduced from 24px to bring cards closer */
            padding: 10px 0;
            margin: 0 -10px; /* Negative margin to allow cards to extend to edges */
        }
        /* Modal responsive adjustments */
        .spotify-modal .modal-dialog {
            margin: 10px;
        }

        .playlist-item-content {
            flex-wrap: nowrap;
        }
    }

    @@media (max-width: 768px) {
        .library-grid {
            grid-template-columns: repeat(auto-fill, minmax(140px, 1fr));
            gap: 12px;
        }

        .album-play-btn, .play-track-btn {
            width: 36px;
            height: 36px;
            right: 10px;
            bottom: 10px;
        }
        /* Additional modal adjustments for mobile */
        .spotify-modal .modal-title {
            font-size: 18px;
        }

        .spotify-modal .modal-body {
            padding: 15px;
        }

        .spotify-playlist-item {
            padding: 8px;
        }

        .playlist-cover {
            width: 32px;
            height: 32px;
        }

        .spotify-btn-primary, .spotify-btn-secondary {
            padding: 8px 16px;
            font-size: 14px;
        }
    }

    @@media (max-width: 480px) {
        .library-grid {
            grid-template-columns: repeat(2, 1fr);
            gap: 10px;
        }
        /* Further modal adjustments for small screens */
        .playlist-title {
            font-size: 12px;
            max-width: 100px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }

        .form-check-input {
            width: 18px;
            height: 18px;
            margin-right: 10px;
        }

        .playlist-checkboxes {
            max-height: 250px;
        }
    }

    /* Add Playlist Card */
    .add-playlist-card {
        background-color: rgba(255, 255, 255, 0.05);
        border: 2px dashed #555;
        transition: all var(--transition-speed) ease;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
    }

        .add-playlist-card:hover {
            background-color: rgba(255, 255, 255, 0.1);
            border-color: var(--primary-color);
        }

    .add-playlist-content {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 30px;
        text-align: center;
    }

    .add-playlist-icon {
        font-size: 40px;
        color: var(--primary-color);
        margin-bottom: 16px;
        transition: transform var(--transition-speed) ease;
    }

    .add-playlist-card:hover .add-playlist-icon {
        transform: scale(1.2);
    }

    .add-playlist-text {
        font-size: 14px;
        font-weight: 600;
        color: var(--text-primary);
        margin-top: 8px;
    }
</style>