@using HySound.ViewModels
@model List<TrackViewModel>

<!DOCTYPE html>
<html lang="bg">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>HySound - Начало</title>
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&display=swap" rel="stylesheet">
    <script src="https://kit.fontawesome.com/your-kit-id.js" crossorigin="anonymous"></script> <!-- Add your Font Awesome kit ID -->
</head>
<body>
    <!-- Hero Section -->
    <section class="hero-home">
        <h1>Добре дошли в HySound</h1>
        <p>Открийте нови песни и се насладете на вашата любима музика навсякъде.</p>
        <div>
            <a asp-action="Search" asp-controller="Home" class="hero-btn-home">Започнете сега</a>
        </div>
    </section>

    <div class="container">
        <!-- Featured Section -->
        <section class="featured-section">
            <div class="featured-banner">
                <div class="featured-content">
                    <h3>Открийте новата музика</h3>
                    <p>Слушайте най-новите хитове и открийте нови изпълнители всеки ден. Персонализирайте своето музикално преживяване.</p>
                </div>
            </div>
        </section>

        <!-- Tracks Section -->
        <section class="tracks-home">
            <h2 class="section-title">Популярни песни</h2>
            <div class="track-list-home">
                @foreach(var track in Model)
                {
                    @if (track.IsYoutube)
                    {
                        <div class="track-item-home youtube-track">
                            <iframe class="youtube-iframe"
                                    src="https://www.youtube.com/embed/@track.AudioUrl?autoplay=0&controls=1&modestbranding=1&rel=0"
                            >
                            </iframe>
                            <div class="track-info-home">
                                <h3 class="track-title-home">@track.Title</h3>
                                <p class="track-artist-home">@track.UserName</p>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="track-item-home">
                            <img src="@track.ImageLink" alt="@track.Title" class="track-img-home">
                            <div class="track-info-home">
                                <h3 class="track-title-home">@track.Title</h3>
                                <p class="track-artist-home">@track.UserName</p>
                                <button class="track-play-btn-home"
                                        data-src="@track.AudioUrl"
                                        data-title="@track.Title"
                                        data-artist="@track.UserName"
                                        data-image="@track.ImageLink">
                                    Пусни
                                </button>
                            </div>
                        </div>
                    }
                }
            </div>
        </section>
        
        @if(User.IsInRole("User"))
        {
            <section class="artist-banner">
                <div class="artist-content">
                    <h3>Станете изпълнител в HySound</h3>
                    <p>Споделете вашата музика със света. Качете вашите песни и достигнете до нова аудитория. Започнете своята музикална кариера днес.</p>
                    <a asp-controller="ArtistRequest" asp-action="Index" class="artist-btn">Станете изпълнител</a>
                </div>
            </section>
        }
    </div>

    <!-- Audio Player -->

    <script>
        // home-page-audio.js
        document.addEventListener("DOMContentLoaded", function () {
            // Get references to DOM elements
            const globalAudio = document.getElementById("global-audio");
            const globalAudioSource = document.getElementById("global-audio-source");
            const playButtons = document.querySelectorAll(".track-play-btn-home");
            const playerContainer = document.querySelector('.player-container');
            const playButton = document.getElementById("play-btn");
            const songImage = document.getElementById("song-image");
            const songTitle = document.getElementById("song-title");
            const artistName = document.getElementById("artist-name");
            const timebar = document.getElementById("timebar");
            const soundBar = document.getElementById("sound-bar");

            let isPlaying = false;

            // Helper function to update progress bars
            function updateProgressBar(bar, value) {
                bar.style.background = `linear-gradient(to right, #1db954 0%, #1db954 ${value}%, #1e1e1e ${value}%, #1e1e1e 100%)`;
            }

            // Function to load and play a track
            function playTrack(button) {
                const src = button.dataset.src;
                const title = button.dataset.title;
                const artist = button.dataset.artist;
                const image = button.dataset.image;

                // Update player UI
                globalAudioSource.src = src;
                songImage.src = image || '/Images/default-track.jpg';
                songTitle.textContent = title || 'Unknown Title';
                artistName.textContent = artist || 'Unknown Artist';

                // Reset and load audio
                globalAudio.load();
                globalAudio.currentTime = 0;
                timebar.value = 0;
                updateProgressBar(timebar, 0);
                globalAudio.volume = soundBar.value / 100 || 1.0;
                updateProgressBar(soundBar, soundBar.value);

                // Play the track
                globalAudio.play()
                    .then(() => {
                        isPlaying = true;
                        playButton.querySelector("i").classList.replace("fa-play", "fa-pause");
                        playerContainer.classList.add('visible');
                    })
                    .catch(error => console.error('Error playing audio:', error));
            }

            // Add click event listeners to all play buttons
            playButtons.forEach(button => {
                button.addEventListener("click", function () {
                    playTrack(this);
                });
            });

            // Play/Pause button functionality
            playButton.addEventListener("click", function () {
                if (globalAudio.paused) {
                    globalAudio.play();
                    playButton.querySelector("i").classList.replace("fa-play", "fa-pause");
                    isPlaying = true;
                    playerContainer.classList.add('visible');
                } else {
                    globalAudio.pause();
                    playButton.querySelector("i").classList.replace("fa-pause", "fa-play");
                    isPlaying = false;
                }
            });

            // Update timebar as audio plays
            globalAudio.addEventListener("timeupdate", function () {
                if (!isNaN(globalAudio.duration)) {
                    const progress = (globalAudio.currentTime / globalAudio.duration) * 100;
                    timebar.value = progress || 0;
                    updateProgressBar(timebar, timebar.value);
                }
            });

            // Seek audio when timebar is adjusted
            timebar.addEventListener("input", function () {
                globalAudio.currentTime = (timebar.value / 100) * globalAudio.duration;
                updateProgressBar(timebar, timebar.value);
            });

            // Adjust volume with sound bar
            soundBar.addEventListener("input", function () {
                globalAudio.volume = soundBar.value / 100;
                updateProgressBar(soundBar, soundBar.value);
            });
        });
    </script>
</body>
</html>

<style>
    /* Global Styles */
    :root {
        --primary-color: #1DB954;
        --secondary-color: #191414;
        --text-color: #FFFFFF;
        --background-color: #121212;
        --card-background: #181818;
        --hover-color: #1ED760;
        --transition-speed: 0.3s;
    }

    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Montserrat', 'Arial', sans-serif;
    }

    body {
        background-color: var(--background-color);
        color: var(--text-color);
        overflow-x: hidden;
        line-height: 1.6;
    }

    /* Container */
    .container {
        max-width: 1300px;
        margin: 0 auto;
        padding: 0 20px;
    }

    /* Hero Section */
    .hero-home {
        height: 70vh;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        text-align: center;
        background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.7)), url('/Images/hero-background.jpg');
        background-size: cover;
        background-position: center;
        padding: 0 2rem;
        margin-bottom: 4rem;
        position: relative;
        overflow: hidden;
    }

    .hero-home::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 100px;
        background: linear-gradient(to top, var(--background-color), transparent);
    }

    .hero-home h1 {
        font-size: 4rem;
        margin-bottom: 1rem;
        text-shadow: 0 2px 8px rgba(0, 0, 0, 0.7);
        letter-spacing: -1px;
    }

    .hero-home p {
        font-size: 1.3rem;
        margin-bottom: 2.5rem;
        max-width: 700px;
        text-shadow: 0 2px 8px rgba(0, 0, 0, 0.7);
        opacity: 0.9;
    }

    .hero-btn-home {
        background-color: var(--primary-color);
        color: var(--text-color);
        padding: 1rem 2.5rem;
        border-radius: 50px;
        text-decoration: none;
        font-weight: bold;
        font-size: 1.1rem;
        transition: all var(--transition-speed);
        box-shadow: 0 4px 12px rgba(29, 185, 84, 0.5);
        position: relative;
        z-index: 10;
        margin: 0.5rem;
    }

    .hero-btn-home:hover {
        background-color: var(--hover-color);
        transform: translateY(-3px);
        box-shadow: 0 6px 15px rgba(29, 185, 84, 0.6);
    }

    /* Section Titles */
    .section-title {
        font-size: 2rem;
        margin-bottom: 2rem;
        font-weight: 700;
        display: flex;
        align-items: center;
        padding-bottom: 0.5rem;
        border-bottom: 2px solid rgba(255, 255, 255, 0.1);
    }

    .section-title::before {
        content: '';
        display: inline-block;
        width: 6px;
        height: 28px;
        background-color: var(--primary-color);
        margin-right: 1rem;
        border-radius: 3px;
    }

    /* Tracks Section */
    .tracks-home {
        padding: 2rem 0;
        margin-bottom: 4rem;
    }

    .track-list-home {
        display: grid;
        grid-template-columns: repeat(4, 1fr);
        gap: 0.75rem;
    }

    .track-item-home {
        display: flex;
        flex-direction: column;
        background-color: var(--card-background);
        border-radius: 12px;
        overflow: hidden;
        transition: all var(--transition-speed);
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
        position: relative;
        height: 250px;
    }

    .track-item-home:hover {
        transform: translateY(-5px);
        background-color: rgba(255, 255, 255, 0.1);
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
    }

    .track-img-home {
        width: 100%;
        height: 150px;
        object-fit: cover;
    }

    .youtube-iframe {
        width: 100%;
        height: 150px; /* Match the height of track-img-home */
        border: none;
    }

    .track-info-home {
        padding: 0.8rem;
        display: flex;
        flex-direction: column;
        flex-grow: 1;
    }

    .track-title-home {
        font-size: 1rem;
        font-weight: 600;
        margin-bottom: 0.3rem;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .track-artist-home {
        font-size: 0.85rem;
        opacity: 0.7;
        margin-bottom: 6px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .track-play-btn-home {
        background-color: var(--primary-color);
        color: var(--text-color);
        border: none;
        padding: 0.3rem 1.2rem;
        border-radius: 50px;
        cursor: pointer;
        font-weight: 600;
        transition: all var(--transition-speed);
        align-self: flex-start;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        margin-top: auto;
    }

    .track-play-btn-home:hover {
        background-color: var(--hover-color);
        transform: scale(1.05);
    }

    .track-play-btn-home::before {
        content: '▶';
        font-size: 0.8rem;
    }

    /* Player Styles */
    .player-container {
        display: none; /* Hidden by default */
        position: fixed;
        bottom: 0;
        left: 0;
        width: 100%;
        background-color: var(--card-background);
        padding: 1rem;
        box-shadow: 0 -4px 12px rgba(0, 0, 0, 0.3);
        z-index: 1000;
    }

    .player-container.visible {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .player-left {
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .player-image {
        width: 50px;
        height: 50px;
        object-fit: cover;
        border-radius: 4px;
    }

    .player-info {
        display: flex;
        flex-direction: column;
    }

    .player-song-name {
        font-size: 1rem;
        font-weight: 600;
    }

    .player-artist-name {
        font-size: 0.85rem;
        opacity: 0.7;
    }

    .player-center {
        flex-grow: 1;
        display: flex;
        flex-direction: column;
        align-items: center;
        gap: 0.5rem;
        max-width: 500px;
    }

    .player-btn-container {
        display: flex;
        gap: 1rem;
    }

    .player-btn {
        background: none;
        border: none;
        color: var(--text-color);
        font-size: 1.2rem;
        cursor: pointer;
        transition: color var(--transition-speed);
    }

    .player-btn:hover {
        color: var(--primary-color);
    }

    .player-timebar {
        width: 100%;
        height: 5px;
        background: #1e1e1e;
        border-radius: 5px;
        cursor: pointer;
    }

    .player-right {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .volume-icon {
        font-size: 1.2rem;
    }

    .player-sound-bar {
        width: 100px;
        height: 5px;
        background: #1e1e1e;
        border-radius: 5px;
        cursor: pointer;
    }

    .hidden {
        display: none;
    }

    /* Featured Section */
    .featured-section {
        margin-bottom: 4rem;
    }

    .featured-banner {
        background: linear-gradient(90deg, var(--primary-color), #2c5283);
        border-radius: 12px;
        padding: 2rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
        position: relative;
        overflow: hidden;
    }

    .featured-banner::before {
        content: '';
        position: absolute;
        width: 200px;
        height: 200px;
        background: rgba(255, 255, 255, 0.1);
        border-radius: 50%;
        top: -100px;
        right: -50px;
    }

    .featured-content {
        max-width: 60%;
    }

    .featured-content h3 {
        font-size: 1.8rem;
        margin-bottom: 1rem;
    }

    .featured-content p {
        margin-bottom: 1.5rem;
        opacity: 0.9;
    }

    /* Artist Banner */
    .artist-banner {
        background: linear-gradient(90deg, #2c5283, var(--primary-color));
        border-radius: 12px;
        padding: 2rem;
        margin-bottom: 4rem;
        display: flex;
        justify-content: space-between;
        align-items: center;
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.3);
    }

    .artist-content {
        max-width: 70%;
    }

    .artist-content h3 {
        font-size: 1.8rem;
        margin-bottom: 1rem;
    }

    .artist-content p {
        margin-bottom: 1.5rem;
        opacity: 0.9;
    }

    .artist-btn {
        background-color: var(--secondary-color);
        color: lightgreen;
        padding: 0.8rem 1.5rem;
        border-radius: 50px;
        text-decoration: none;
        font-weight: 600;
        transition: all var(--transition-speed);
        display: inline-block;
    }

    .artist-btn:hover {
        background-color: #333;
        transform: translateY(-3px);
    }

    /* Responsive Design */
    @@media (max-width: 1200px) {
        .track-list-home {
            grid-template-columns: repeat(3, 1fr);
        }
    }

    @@media (max-width: 992px) {
        .track-list-home {
            grid-template-columns: repeat(2, 1fr);
        }

        .hero-home h1 {
            font-size: 3.5rem;
        }

        .featured-content, .artist-content {
            max-width: 100%;
        }

        .featured-banner, .artist-banner {
            flex-direction: column;
            text-align: center;
        }
    }

    @@media (max-width: 768px) {
        .hero-home h1 {
            font-size: 3rem;
        }

        .track-list-home {
            grid-template-columns: repeat(2, 1fr);
        }
    }

    @@media (max-width: 576px) {
        .track-list-home {
            grid-template-columns: 1fr;
        }

        .hero-home {
            height: 1200vh;
        }

        .hero-home h1 {
            font-size: 6.5rem;
        }

        .track-play-btn-home {
            padding: 12.4rem 1rem;
            font-size: 0.9rem;
        }

        .featured-content h3, .artist-content h3 {
            font-size: 1.5rem;
        }
    }

</style>